swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
host: petstore.swagger.io
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
        - name: numberLimit
          in: query
          required: false
          type: number
        - name: booleanLimit
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Create a pet
      operationId: createMultiplePets
      parameters:
        - name: pets
          in: body
          schema:
            $ref: '#/definitions/Pets'
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - $ref: "#/parameters/ifMatch"
        - $ref: "#/parameters/ifNoneMatch"
        - $ref: "#/parameters/stringArray"
        - $ref: "#/parameters/optionalNumberArray"
        - $ref: "#/parameters/optionalBooleanArray"
        - $ref: "#/parameters/optionalSpacedBooleanArray"
        - $ref: "#/parameters/optionalTabbedBooleanArray"
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          type: integer
          format: int32
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        minLength: 1
      tag:
        type: string
  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

parameters:

  ifNoneMatch:
    name: If-None-Match
    in: header
    description: If-None-Match header
    required: false
    type: number

  ifMatch:
    name: If-Match
    in: header
    description: If-Match header
    required: true
    type: string

  stringArray:
    name: String
    in: query
    description: an array of strings
    required: true
    type: array
    items:
      type: string
    collectionFormat: multi

  optionalNumberArray:
    name: Number
    in: query
    description: an array of numbers
    required: false
    type: array
    items:
      type: number

  optionalBooleanArray:
    name: Boolean
    in: query
    description: an array of booleans
    required: false
    type: array
    items:
      type: boolean
    collectionFormat: pipes

  optionalSpacedBooleanArray:
    name: SpacedBoolean
    in: query
    description: a spaced array of booleans
    required: false
    type: array
    items:
      type: boolean
    collectionFormat: ssv

  optionalTabbedBooleanArray:
    name: TabbedBoolean
    in: query
    description: a tabbed array of booleans
    required: false
    type: array
    items:
      type: boolean
    collectionFormat: tsv
